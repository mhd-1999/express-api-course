// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  username String  @db.VarChar(255) @map("user_name")
  name String @db.VarChar(255)
  phone String @db.VarChar(125)
  email String @db.VarChar(255)
  address String @db.VarChar(255)
  password String
  avatar String
  roles Role[]
  comments Comment[]
  bookmarkPosts BookmarkPost[]
  @@unique([username,phone,email])

  @@map("users")
}
model Role{
  id String @id @default(uuid())
  name String @db.VarChar(255)
  users User[]

  @@map("role")
}
model Post{
  id String @id @default(uuid())
  content String @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  comments Comment[]
  reactions Reaction[]
  bookmarkPosts BookmarkPost[]

  @@map("posts")
}
model Comment{
  id String @id @default(uuid())
  content String @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields:[userId],references: [id])
  userId String

  post Post @relation(fields:[postId],references: [id])
  postId String

  reactions Reaction[]
  // reaction Reaction @relation(fields:[reactionId],references:[id])
  // reactionId String
  @@map("comments")
}
model Reaction{
  id String @id @default(uuid())
  reactionKey String @db.VarChar(125)
  reactionType String @db.VarChar(125)
  count BigInt
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  post Post @relation(fields: [postId],references: [id])
  postId String

  comment Comment @relation(fields: [commentId],references: [id])
  commentId String

  @@map("reaction")
}
model BookmarkPost{
  postId String
  userId String
  post Post @relation(fields: [postId],references: [id])
  user User @relation(fields: [userId],references: [id])

  @@id([postId,userId])
  @@map("bookmark_post")
}


